//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class imobiliariaEntities : DbContext
    {
        public imobiliariaEntities()
            : base("name=imobiliariaEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<vwCorretor> vwCorretor { get; set; }
        public virtual DbSet<vwDespachante> vwDespachante { get; set; }
        public virtual DbSet<vwImobiliaria> vwImobiliaria { get; set; }
        public virtual DbSet<vwImovel> vwImovel { get; set; }
    
        public virtual ObjectResult<stpConsulta_CEP_Result> stpConsulta_CEP(string nr_CEP)
        {
            var nr_CEPParameter = nr_CEP != null ?
                new ObjectParameter("Nr_CEP", nr_CEP) :
                new ObjectParameter("Nr_CEP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stpConsulta_CEP_Result>("stpConsulta_CEP", nr_CEPParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_CompradorApagar(Nullable<int> cod)
        {
            var codParameter = cod.HasValue ?
                new ObjectParameter("cod", cod) :
                new ObjectParameter("cod", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_CompradorApagar", codParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_CompradorConjugeApagar(Nullable<int> cod)
        {
            var codParameter = cod.HasValue ?
                new ObjectParameter("cod", cod) :
                new ObjectParameter("cod", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_CompradorConjugeApagar", codParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> usp_CompradoreConjugeInserir(string cpf, string rg, string nome, string sexo, string estado_Civil, string profissao, Nullable<int> renda_bruta, Nullable<decimal> fgts, string ddi, string ddd, string tel, string tel2, string cel, string telComercial, string telExtra, string lista_intereste, string creci, string rua, Nullable<int> num, string compl, string bairro, string cidade, string uf, string pais, string cpfC, string rgC, string nomeC, string sexoC, string estado_CivilC, string profissaoC, Nullable<int> renda_brutaC, Nullable<decimal> fgtsC, string ddiC, string dddC, string telC, string tel2C, string celC, string telComercialC, string telExtraC)
        {
            var cpfParameter = cpf != null ?
                new ObjectParameter("cpf", cpf) :
                new ObjectParameter("cpf", typeof(string));
    
            var rgParameter = rg != null ?
                new ObjectParameter("rg", rg) :
                new ObjectParameter("rg", typeof(string));
    
            var nomeParameter = nome != null ?
                new ObjectParameter("nome", nome) :
                new ObjectParameter("nome", typeof(string));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("sexo", sexo) :
                new ObjectParameter("sexo", typeof(string));
    
            var estado_CivilParameter = estado_Civil != null ?
                new ObjectParameter("estado_Civil", estado_Civil) :
                new ObjectParameter("estado_Civil", typeof(string));
    
            var profissaoParameter = profissao != null ?
                new ObjectParameter("profissao", profissao) :
                new ObjectParameter("profissao", typeof(string));
    
            var renda_brutaParameter = renda_bruta.HasValue ?
                new ObjectParameter("renda_bruta", renda_bruta) :
                new ObjectParameter("renda_bruta", typeof(int));
    
            var fgtsParameter = fgts.HasValue ?
                new ObjectParameter("fgts", fgts) :
                new ObjectParameter("fgts", typeof(decimal));
    
            var ddiParameter = ddi != null ?
                new ObjectParameter("ddi", ddi) :
                new ObjectParameter("ddi", typeof(string));
    
            var dddParameter = ddd != null ?
                new ObjectParameter("ddd", ddd) :
                new ObjectParameter("ddd", typeof(string));
    
            var telParameter = tel != null ?
                new ObjectParameter("tel", tel) :
                new ObjectParameter("tel", typeof(string));
    
            var tel2Parameter = tel2 != null ?
                new ObjectParameter("tel2", tel2) :
                new ObjectParameter("tel2", typeof(string));
    
            var celParameter = cel != null ?
                new ObjectParameter("cel", cel) :
                new ObjectParameter("cel", typeof(string));
    
            var telComercialParameter = telComercial != null ?
                new ObjectParameter("telComercial", telComercial) :
                new ObjectParameter("telComercial", typeof(string));
    
            var telExtraParameter = telExtra != null ?
                new ObjectParameter("telExtra", telExtra) :
                new ObjectParameter("telExtra", typeof(string));
    
            var lista_interesteParameter = lista_intereste != null ?
                new ObjectParameter("lista_intereste", lista_intereste) :
                new ObjectParameter("lista_intereste", typeof(string));
    
            var creciParameter = creci != null ?
                new ObjectParameter("creci", creci) :
                new ObjectParameter("creci", typeof(string));
    
            var ruaParameter = rua != null ?
                new ObjectParameter("rua", rua) :
                new ObjectParameter("rua", typeof(string));
    
            var numParameter = num.HasValue ?
                new ObjectParameter("num", num) :
                new ObjectParameter("num", typeof(int));
    
            var complParameter = compl != null ?
                new ObjectParameter("compl", compl) :
                new ObjectParameter("compl", typeof(string));
    
            var bairroParameter = bairro != null ?
                new ObjectParameter("bairro", bairro) :
                new ObjectParameter("bairro", typeof(string));
    
            var cidadeParameter = cidade != null ?
                new ObjectParameter("cidade", cidade) :
                new ObjectParameter("cidade", typeof(string));
    
            var ufParameter = uf != null ?
                new ObjectParameter("uf", uf) :
                new ObjectParameter("uf", typeof(string));
    
            var paisParameter = pais != null ?
                new ObjectParameter("pais", pais) :
                new ObjectParameter("pais", typeof(string));
    
            var cpfCParameter = cpfC != null ?
                new ObjectParameter("cpfC", cpfC) :
                new ObjectParameter("cpfC", typeof(string));
    
            var rgCParameter = rgC != null ?
                new ObjectParameter("rgC", rgC) :
                new ObjectParameter("rgC", typeof(string));
    
            var nomeCParameter = nomeC != null ?
                new ObjectParameter("nomeC", nomeC) :
                new ObjectParameter("nomeC", typeof(string));
    
            var sexoCParameter = sexoC != null ?
                new ObjectParameter("sexoC", sexoC) :
                new ObjectParameter("sexoC", typeof(string));
    
            var estado_CivilCParameter = estado_CivilC != null ?
                new ObjectParameter("estado_CivilC", estado_CivilC) :
                new ObjectParameter("estado_CivilC", typeof(string));
    
            var profissaoCParameter = profissaoC != null ?
                new ObjectParameter("profissaoC", profissaoC) :
                new ObjectParameter("profissaoC", typeof(string));
    
            var renda_brutaCParameter = renda_brutaC.HasValue ?
                new ObjectParameter("renda_brutaC", renda_brutaC) :
                new ObjectParameter("renda_brutaC", typeof(int));
    
            var fgtsCParameter = fgtsC.HasValue ?
                new ObjectParameter("fgtsC", fgtsC) :
                new ObjectParameter("fgtsC", typeof(decimal));
    
            var ddiCParameter = ddiC != null ?
                new ObjectParameter("ddiC", ddiC) :
                new ObjectParameter("ddiC", typeof(string));
    
            var dddCParameter = dddC != null ?
                new ObjectParameter("dddC", dddC) :
                new ObjectParameter("dddC", typeof(string));
    
            var telCParameter = telC != null ?
                new ObjectParameter("telC", telC) :
                new ObjectParameter("telC", typeof(string));
    
            var tel2CParameter = tel2C != null ?
                new ObjectParameter("tel2C", tel2C) :
                new ObjectParameter("tel2C", typeof(string));
    
            var celCParameter = celC != null ?
                new ObjectParameter("celC", celC) :
                new ObjectParameter("celC", typeof(string));
    
            var telComercialCParameter = telComercialC != null ?
                new ObjectParameter("telComercialC", telComercialC) :
                new ObjectParameter("telComercialC", typeof(string));
    
            var telExtraCParameter = telExtraC != null ?
                new ObjectParameter("telExtraC", telExtraC) :
                new ObjectParameter("telExtraC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("usp_CompradoreConjugeInserir", cpfParameter, rgParameter, nomeParameter, sexoParameter, estado_CivilParameter, profissaoParameter, renda_brutaParameter, fgtsParameter, ddiParameter, dddParameter, telParameter, tel2Parameter, celParameter, telComercialParameter, telExtraParameter, lista_interesteParameter, creciParameter, ruaParameter, numParameter, complParameter, bairroParameter, cidadeParameter, ufParameter, paisParameter, cpfCParameter, rgCParameter, nomeCParameter, sexoCParameter, estado_CivilCParameter, profissaoCParameter, renda_brutaCParameter, fgtsCParameter, ddiCParameter, dddCParameter, telCParameter, tel2CParameter, celCParameter, telComercialCParameter, telExtraCParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> usp_CompradorInserir(string cpf, string rg, string nome, string sexo, string estado_Civil, string profissao, Nullable<int> renda_bruta, Nullable<decimal> fgts, string ddi, string ddd, string tel, string tel2, string cel, string telComercial, string telExtra, string lista_intereste, string creci, string rua, Nullable<int> num, string compl, string bairro, string cidade, string uf, string pais)
        {
            var cpfParameter = cpf != null ?
                new ObjectParameter("cpf", cpf) :
                new ObjectParameter("cpf", typeof(string));
    
            var rgParameter = rg != null ?
                new ObjectParameter("rg", rg) :
                new ObjectParameter("rg", typeof(string));
    
            var nomeParameter = nome != null ?
                new ObjectParameter("nome", nome) :
                new ObjectParameter("nome", typeof(string));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("sexo", sexo) :
                new ObjectParameter("sexo", typeof(string));
    
            var estado_CivilParameter = estado_Civil != null ?
                new ObjectParameter("estado_Civil", estado_Civil) :
                new ObjectParameter("estado_Civil", typeof(string));
    
            var profissaoParameter = profissao != null ?
                new ObjectParameter("profissao", profissao) :
                new ObjectParameter("profissao", typeof(string));
    
            var renda_brutaParameter = renda_bruta.HasValue ?
                new ObjectParameter("renda_bruta", renda_bruta) :
                new ObjectParameter("renda_bruta", typeof(int));
    
            var fgtsParameter = fgts.HasValue ?
                new ObjectParameter("fgts", fgts) :
                new ObjectParameter("fgts", typeof(decimal));
    
            var ddiParameter = ddi != null ?
                new ObjectParameter("ddi", ddi) :
                new ObjectParameter("ddi", typeof(string));
    
            var dddParameter = ddd != null ?
                new ObjectParameter("ddd", ddd) :
                new ObjectParameter("ddd", typeof(string));
    
            var telParameter = tel != null ?
                new ObjectParameter("tel", tel) :
                new ObjectParameter("tel", typeof(string));
    
            var tel2Parameter = tel2 != null ?
                new ObjectParameter("tel2", tel2) :
                new ObjectParameter("tel2", typeof(string));
    
            var celParameter = cel != null ?
                new ObjectParameter("cel", cel) :
                new ObjectParameter("cel", typeof(string));
    
            var telComercialParameter = telComercial != null ?
                new ObjectParameter("telComercial", telComercial) :
                new ObjectParameter("telComercial", typeof(string));
    
            var telExtraParameter = telExtra != null ?
                new ObjectParameter("telExtra", telExtra) :
                new ObjectParameter("telExtra", typeof(string));
    
            var lista_interesteParameter = lista_intereste != null ?
                new ObjectParameter("lista_intereste", lista_intereste) :
                new ObjectParameter("lista_intereste", typeof(string));
    
            var creciParameter = creci != null ?
                new ObjectParameter("creci", creci) :
                new ObjectParameter("creci", typeof(string));
    
            var ruaParameter = rua != null ?
                new ObjectParameter("rua", rua) :
                new ObjectParameter("rua", typeof(string));
    
            var numParameter = num.HasValue ?
                new ObjectParameter("num", num) :
                new ObjectParameter("num", typeof(int));
    
            var complParameter = compl != null ?
                new ObjectParameter("compl", compl) :
                new ObjectParameter("compl", typeof(string));
    
            var bairroParameter = bairro != null ?
                new ObjectParameter("bairro", bairro) :
                new ObjectParameter("bairro", typeof(string));
    
            var cidadeParameter = cidade != null ?
                new ObjectParameter("cidade", cidade) :
                new ObjectParameter("cidade", typeof(string));
    
            var ufParameter = uf != null ?
                new ObjectParameter("uf", uf) :
                new ObjectParameter("uf", typeof(string));
    
            var paisParameter = pais != null ?
                new ObjectParameter("pais", pais) :
                new ObjectParameter("pais", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("usp_CompradorInserir", cpfParameter, rgParameter, nomeParameter, sexoParameter, estado_CivilParameter, profissaoParameter, renda_brutaParameter, fgtsParameter, ddiParameter, dddParameter, telParameter, tel2Parameter, celParameter, telComercialParameter, telExtraParameter, lista_interesteParameter, creciParameter, ruaParameter, numParameter, complParameter, bairroParameter, cidadeParameter, ufParameter, paisParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_CorretorApagar(Nullable<int> cod)
        {
            var codParameter = cod.HasValue ?
                new ObjectParameter("cod", cod) :
                new ObjectParameter("cod", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_CorretorApagar", codParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> usp_CorretorInserir(string cpf, string rg, string nome, string ddi, string ddd, string tel, string tel2, string cel, string telComercial, string telExtra, string sexo, string creci, string rua, Nullable<int> num, string compl, string bairro, string cidade, string uf, string pais)
        {
            var cpfParameter = cpf != null ?
                new ObjectParameter("cpf", cpf) :
                new ObjectParameter("cpf", typeof(string));
    
            var rgParameter = rg != null ?
                new ObjectParameter("rg", rg) :
                new ObjectParameter("rg", typeof(string));
    
            var nomeParameter = nome != null ?
                new ObjectParameter("nome", nome) :
                new ObjectParameter("nome", typeof(string));
    
            var ddiParameter = ddi != null ?
                new ObjectParameter("ddi", ddi) :
                new ObjectParameter("ddi", typeof(string));
    
            var dddParameter = ddd != null ?
                new ObjectParameter("ddd", ddd) :
                new ObjectParameter("ddd", typeof(string));
    
            var telParameter = tel != null ?
                new ObjectParameter("tel", tel) :
                new ObjectParameter("tel", typeof(string));
    
            var tel2Parameter = tel2 != null ?
                new ObjectParameter("tel2", tel2) :
                new ObjectParameter("tel2", typeof(string));
    
            var celParameter = cel != null ?
                new ObjectParameter("cel", cel) :
                new ObjectParameter("cel", typeof(string));
    
            var telComercialParameter = telComercial != null ?
                new ObjectParameter("telComercial", telComercial) :
                new ObjectParameter("telComercial", typeof(string));
    
            var telExtraParameter = telExtra != null ?
                new ObjectParameter("telExtra", telExtra) :
                new ObjectParameter("telExtra", typeof(string));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("sexo", sexo) :
                new ObjectParameter("sexo", typeof(string));
    
            var creciParameter = creci != null ?
                new ObjectParameter("creci", creci) :
                new ObjectParameter("creci", typeof(string));
    
            var ruaParameter = rua != null ?
                new ObjectParameter("rua", rua) :
                new ObjectParameter("rua", typeof(string));
    
            var numParameter = num.HasValue ?
                new ObjectParameter("num", num) :
                new ObjectParameter("num", typeof(int));
    
            var complParameter = compl != null ?
                new ObjectParameter("compl", compl) :
                new ObjectParameter("compl", typeof(string));
    
            var bairroParameter = bairro != null ?
                new ObjectParameter("bairro", bairro) :
                new ObjectParameter("bairro", typeof(string));
    
            var cidadeParameter = cidade != null ?
                new ObjectParameter("cidade", cidade) :
                new ObjectParameter("cidade", typeof(string));
    
            var ufParameter = uf != null ?
                new ObjectParameter("uf", uf) :
                new ObjectParameter("uf", typeof(string));
    
            var paisParameter = pais != null ?
                new ObjectParameter("pais", pais) :
                new ObjectParameter("pais", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("usp_CorretorInserir", cpfParameter, rgParameter, nomeParameter, ddiParameter, dddParameter, telParameter, tel2Parameter, celParameter, telComercialParameter, telExtraParameter, sexoParameter, creciParameter, ruaParameter, numParameter, complParameter, bairroParameter, cidadeParameter, ufParameter, paisParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_DespachanteApagar(Nullable<int> cod)
        {
            var codParameter = cod.HasValue ?
                new ObjectParameter("cod", cod) :
                new ObjectParameter("cod", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_DespachanteApagar", codParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> usp_DespachanteInserir(string nome, Nullable<decimal> preco, Nullable<short> servicos_completos, Nullable<short> servicos_pendentes, string ddi, string ddd, string tel, string tel2, string cel, string telComercial, string telExtra, string rua, Nullable<int> num, string compl, string bairro, string cidade, string uf, string pais)
        {
            var nomeParameter = nome != null ?
                new ObjectParameter("nome", nome) :
                new ObjectParameter("nome", typeof(string));
    
            var precoParameter = preco.HasValue ?
                new ObjectParameter("preco", preco) :
                new ObjectParameter("preco", typeof(decimal));
    
            var servicos_completosParameter = servicos_completos.HasValue ?
                new ObjectParameter("servicos_completos", servicos_completos) :
                new ObjectParameter("servicos_completos", typeof(short));
    
            var servicos_pendentesParameter = servicos_pendentes.HasValue ?
                new ObjectParameter("servicos_pendentes", servicos_pendentes) :
                new ObjectParameter("servicos_pendentes", typeof(short));
    
            var ddiParameter = ddi != null ?
                new ObjectParameter("ddi", ddi) :
                new ObjectParameter("ddi", typeof(string));
    
            var dddParameter = ddd != null ?
                new ObjectParameter("ddd", ddd) :
                new ObjectParameter("ddd", typeof(string));
    
            var telParameter = tel != null ?
                new ObjectParameter("tel", tel) :
                new ObjectParameter("tel", typeof(string));
    
            var tel2Parameter = tel2 != null ?
                new ObjectParameter("tel2", tel2) :
                new ObjectParameter("tel2", typeof(string));
    
            var celParameter = cel != null ?
                new ObjectParameter("cel", cel) :
                new ObjectParameter("cel", typeof(string));
    
            var telComercialParameter = telComercial != null ?
                new ObjectParameter("telComercial", telComercial) :
                new ObjectParameter("telComercial", typeof(string));
    
            var telExtraParameter = telExtra != null ?
                new ObjectParameter("telExtra", telExtra) :
                new ObjectParameter("telExtra", typeof(string));
    
            var ruaParameter = rua != null ?
                new ObjectParameter("rua", rua) :
                new ObjectParameter("rua", typeof(string));
    
            var numParameter = num.HasValue ?
                new ObjectParameter("num", num) :
                new ObjectParameter("num", typeof(int));
    
            var complParameter = compl != null ?
                new ObjectParameter("compl", compl) :
                new ObjectParameter("compl", typeof(string));
    
            var bairroParameter = bairro != null ?
                new ObjectParameter("bairro", bairro) :
                new ObjectParameter("bairro", typeof(string));
    
            var cidadeParameter = cidade != null ?
                new ObjectParameter("cidade", cidade) :
                new ObjectParameter("cidade", typeof(string));
    
            var ufParameter = uf != null ?
                new ObjectParameter("uf", uf) :
                new ObjectParameter("uf", typeof(string));
    
            var paisParameter = pais != null ?
                new ObjectParameter("pais", pais) :
                new ObjectParameter("pais", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("usp_DespachanteInserir", nomeParameter, precoParameter, servicos_completosParameter, servicos_pendentesParameter, ddiParameter, dddParameter, telParameter, tel2Parameter, celParameter, telComercialParameter, telExtraParameter, ruaParameter, numParameter, complParameter, bairroParameter, cidadeParameter, ufParameter, paisParameter);
        }
    
        public virtual ObjectResult<string> usp_ImobiliariaApagar(string creci)
        {
            var creciParameter = creci != null ?
                new ObjectParameter("creci", creci) :
                new ObjectParameter("creci", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_ImobiliariaApagar", creciParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> usp_ImobiliariaInserir(string creci, string nome, Nullable<System.DateTime> data_emissao, string razao, string apelido, string ddi, string ddd, string tel, string tel2, string cel, string telComercial, string telExtra, string dono, string co_dono, string rua, Nullable<int> num, string compl, string bairro, string cidade, string uf, string pais)
        {
            var creciParameter = creci != null ?
                new ObjectParameter("creci", creci) :
                new ObjectParameter("creci", typeof(string));
    
            var nomeParameter = nome != null ?
                new ObjectParameter("nome", nome) :
                new ObjectParameter("nome", typeof(string));
    
            var data_emissaoParameter = data_emissao.HasValue ?
                new ObjectParameter("data_emissao", data_emissao) :
                new ObjectParameter("data_emissao", typeof(System.DateTime));
    
            var razaoParameter = razao != null ?
                new ObjectParameter("razao", razao) :
                new ObjectParameter("razao", typeof(string));
    
            var apelidoParameter = apelido != null ?
                new ObjectParameter("apelido", apelido) :
                new ObjectParameter("apelido", typeof(string));
    
            var ddiParameter = ddi != null ?
                new ObjectParameter("ddi", ddi) :
                new ObjectParameter("ddi", typeof(string));
    
            var dddParameter = ddd != null ?
                new ObjectParameter("ddd", ddd) :
                new ObjectParameter("ddd", typeof(string));
    
            var telParameter = tel != null ?
                new ObjectParameter("tel", tel) :
                new ObjectParameter("tel", typeof(string));
    
            var tel2Parameter = tel2 != null ?
                new ObjectParameter("tel2", tel2) :
                new ObjectParameter("tel2", typeof(string));
    
            var celParameter = cel != null ?
                new ObjectParameter("cel", cel) :
                new ObjectParameter("cel", typeof(string));
    
            var telComercialParameter = telComercial != null ?
                new ObjectParameter("telComercial", telComercial) :
                new ObjectParameter("telComercial", typeof(string));
    
            var telExtraParameter = telExtra != null ?
                new ObjectParameter("telExtra", telExtra) :
                new ObjectParameter("telExtra", typeof(string));
    
            var donoParameter = dono != null ?
                new ObjectParameter("dono", dono) :
                new ObjectParameter("dono", typeof(string));
    
            var co_donoParameter = co_dono != null ?
                new ObjectParameter("co_dono", co_dono) :
                new ObjectParameter("co_dono", typeof(string));
    
            var ruaParameter = rua != null ?
                new ObjectParameter("rua", rua) :
                new ObjectParameter("rua", typeof(string));
    
            var numParameter = num.HasValue ?
                new ObjectParameter("num", num) :
                new ObjectParameter("num", typeof(int));
    
            var complParameter = compl != null ?
                new ObjectParameter("compl", compl) :
                new ObjectParameter("compl", typeof(string));
    
            var bairroParameter = bairro != null ?
                new ObjectParameter("bairro", bairro) :
                new ObjectParameter("bairro", typeof(string));
    
            var cidadeParameter = cidade != null ?
                new ObjectParameter("cidade", cidade) :
                new ObjectParameter("cidade", typeof(string));
    
            var ufParameter = uf != null ?
                new ObjectParameter("uf", uf) :
                new ObjectParameter("uf", typeof(string));
    
            var paisParameter = pais != null ?
                new ObjectParameter("pais", pais) :
                new ObjectParameter("pais", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("usp_ImobiliariaInserir", creciParameter, nomeParameter, data_emissaoParameter, razaoParameter, apelidoParameter, ddiParameter, dddParameter, telParameter, tel2Parameter, celParameter, telComercialParameter, telExtraParameter, donoParameter, co_donoParameter, ruaParameter, numParameter, complParameter, bairroParameter, cidadeParameter, ufParameter, paisParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_ImovelApagar(Nullable<int> cod)
        {
            var codParameter = cod.HasValue ?
                new ObjectParameter("cod", cod) :
                new ObjectParameter("cod", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_ImovelApagar", codParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> usp_ImovelInserir(Nullable<int> registro, string frente_lote, string lado_lote, Nullable<int> capitador, Nullable<int> cod_proprietario, string rua, Nullable<int> num, string compl, string bairro, string cidade, string uf, string pais)
        {
            var registroParameter = registro.HasValue ?
                new ObjectParameter("registro", registro) :
                new ObjectParameter("registro", typeof(int));
    
            var frente_loteParameter = frente_lote != null ?
                new ObjectParameter("frente_lote", frente_lote) :
                new ObjectParameter("frente_lote", typeof(string));
    
            var lado_loteParameter = lado_lote != null ?
                new ObjectParameter("lado_lote", lado_lote) :
                new ObjectParameter("lado_lote", typeof(string));
    
            var capitadorParameter = capitador.HasValue ?
                new ObjectParameter("capitador", capitador) :
                new ObjectParameter("capitador", typeof(int));
    
            var cod_proprietarioParameter = cod_proprietario.HasValue ?
                new ObjectParameter("cod_proprietario", cod_proprietario) :
                new ObjectParameter("cod_proprietario", typeof(int));
    
            var ruaParameter = rua != null ?
                new ObjectParameter("rua", rua) :
                new ObjectParameter("rua", typeof(string));
    
            var numParameter = num.HasValue ?
                new ObjectParameter("num", num) :
                new ObjectParameter("num", typeof(int));
    
            var complParameter = compl != null ?
                new ObjectParameter("compl", compl) :
                new ObjectParameter("compl", typeof(string));
    
            var bairroParameter = bairro != null ?
                new ObjectParameter("bairro", bairro) :
                new ObjectParameter("bairro", typeof(string));
    
            var cidadeParameter = cidade != null ?
                new ObjectParameter("cidade", cidade) :
                new ObjectParameter("cidade", typeof(string));
    
            var ufParameter = uf != null ?
                new ObjectParameter("uf", uf) :
                new ObjectParameter("uf", typeof(string));
    
            var paisParameter = pais != null ?
                new ObjectParameter("pais", pais) :
                new ObjectParameter("pais", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("usp_ImovelInserir", registroParameter, frente_loteParameter, lado_loteParameter, capitadorParameter, cod_proprietarioParameter, ruaParameter, numParameter, complParameter, bairroParameter, cidadeParameter, ufParameter, paisParameter);
        }
    
        public virtual ObjectResult<usp_indexesAll_Result> usp_indexesAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_indexesAll_Result>("usp_indexesAll");
        }
    
        public virtual ObjectResult<Nullable<int>> usp_ProprietarioApagar(Nullable<int> cod)
        {
            var codParameter = cod.HasValue ?
                new ObjectParameter("cod", cod) :
                new ObjectParameter("cod", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_ProprietarioApagar", codParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_ProprietarioConjugeApagar(Nullable<int> cod)
        {
            var codParameter = cod.HasValue ?
                new ObjectParameter("cod", cod) :
                new ObjectParameter("cod", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_ProprietarioConjugeApagar", codParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> usp_ProprietarioeConjugeInserir(string cpf, string rg, string nome, string sexo, string est_civil, string ddi, string ddd, string tel, string tel2, string cel, string telComercial, string telExtra, string rua, Nullable<int> num, string compl, string bairro, string cidade, string uf, string pais, string cpfC, string rgC, string nomeC, string sexoC, string est_civilC, string ddiC, string dddC, string telC, string tel2C, string celC, string telComercialC, string telExtraC)
        {
            var cpfParameter = cpf != null ?
                new ObjectParameter("cpf", cpf) :
                new ObjectParameter("cpf", typeof(string));
    
            var rgParameter = rg != null ?
                new ObjectParameter("rg", rg) :
                new ObjectParameter("rg", typeof(string));
    
            var nomeParameter = nome != null ?
                new ObjectParameter("nome", nome) :
                new ObjectParameter("nome", typeof(string));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("sexo", sexo) :
                new ObjectParameter("sexo", typeof(string));
    
            var est_civilParameter = est_civil != null ?
                new ObjectParameter("est_civil", est_civil) :
                new ObjectParameter("est_civil", typeof(string));
    
            var ddiParameter = ddi != null ?
                new ObjectParameter("ddi", ddi) :
                new ObjectParameter("ddi", typeof(string));
    
            var dddParameter = ddd != null ?
                new ObjectParameter("ddd", ddd) :
                new ObjectParameter("ddd", typeof(string));
    
            var telParameter = tel != null ?
                new ObjectParameter("tel", tel) :
                new ObjectParameter("tel", typeof(string));
    
            var tel2Parameter = tel2 != null ?
                new ObjectParameter("tel2", tel2) :
                new ObjectParameter("tel2", typeof(string));
    
            var celParameter = cel != null ?
                new ObjectParameter("cel", cel) :
                new ObjectParameter("cel", typeof(string));
    
            var telComercialParameter = telComercial != null ?
                new ObjectParameter("telComercial", telComercial) :
                new ObjectParameter("telComercial", typeof(string));
    
            var telExtraParameter = telExtra != null ?
                new ObjectParameter("telExtra", telExtra) :
                new ObjectParameter("telExtra", typeof(string));
    
            var ruaParameter = rua != null ?
                new ObjectParameter("rua", rua) :
                new ObjectParameter("rua", typeof(string));
    
            var numParameter = num.HasValue ?
                new ObjectParameter("num", num) :
                new ObjectParameter("num", typeof(int));
    
            var complParameter = compl != null ?
                new ObjectParameter("compl", compl) :
                new ObjectParameter("compl", typeof(string));
    
            var bairroParameter = bairro != null ?
                new ObjectParameter("bairro", bairro) :
                new ObjectParameter("bairro", typeof(string));
    
            var cidadeParameter = cidade != null ?
                new ObjectParameter("cidade", cidade) :
                new ObjectParameter("cidade", typeof(string));
    
            var ufParameter = uf != null ?
                new ObjectParameter("uf", uf) :
                new ObjectParameter("uf", typeof(string));
    
            var paisParameter = pais != null ?
                new ObjectParameter("pais", pais) :
                new ObjectParameter("pais", typeof(string));
    
            var cpfCParameter = cpfC != null ?
                new ObjectParameter("cpfC", cpfC) :
                new ObjectParameter("cpfC", typeof(string));
    
            var rgCParameter = rgC != null ?
                new ObjectParameter("rgC", rgC) :
                new ObjectParameter("rgC", typeof(string));
    
            var nomeCParameter = nomeC != null ?
                new ObjectParameter("nomeC", nomeC) :
                new ObjectParameter("nomeC", typeof(string));
    
            var sexoCParameter = sexoC != null ?
                new ObjectParameter("sexoC", sexoC) :
                new ObjectParameter("sexoC", typeof(string));
    
            var est_civilCParameter = est_civilC != null ?
                new ObjectParameter("est_civilC", est_civilC) :
                new ObjectParameter("est_civilC", typeof(string));
    
            var ddiCParameter = ddiC != null ?
                new ObjectParameter("ddiC", ddiC) :
                new ObjectParameter("ddiC", typeof(string));
    
            var dddCParameter = dddC != null ?
                new ObjectParameter("dddC", dddC) :
                new ObjectParameter("dddC", typeof(string));
    
            var telCParameter = telC != null ?
                new ObjectParameter("telC", telC) :
                new ObjectParameter("telC", typeof(string));
    
            var tel2CParameter = tel2C != null ?
                new ObjectParameter("tel2C", tel2C) :
                new ObjectParameter("tel2C", typeof(string));
    
            var celCParameter = celC != null ?
                new ObjectParameter("celC", celC) :
                new ObjectParameter("celC", typeof(string));
    
            var telComercialCParameter = telComercialC != null ?
                new ObjectParameter("telComercialC", telComercialC) :
                new ObjectParameter("telComercialC", typeof(string));
    
            var telExtraCParameter = telExtraC != null ?
                new ObjectParameter("telExtraC", telExtraC) :
                new ObjectParameter("telExtraC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("usp_ProprietarioeConjugeInserir", cpfParameter, rgParameter, nomeParameter, sexoParameter, est_civilParameter, ddiParameter, dddParameter, telParameter, tel2Parameter, celParameter, telComercialParameter, telExtraParameter, ruaParameter, numParameter, complParameter, bairroParameter, cidadeParameter, ufParameter, paisParameter, cpfCParameter, rgCParameter, nomeCParameter, sexoCParameter, est_civilCParameter, ddiCParameter, dddCParameter, telCParameter, tel2CParameter, celCParameter, telComercialCParameter, telExtraCParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> usp_ProprietarioInserir(string cpf, string rg, string nome, string sexo, string est_civil, string ddi, string ddd, string tel, string tel2, string cel, string telComercial, string telExtra, string rua, Nullable<int> num, string compl, string bairro, string cidade, string uf, string pais)
        {
            var cpfParameter = cpf != null ?
                new ObjectParameter("cpf", cpf) :
                new ObjectParameter("cpf", typeof(string));
    
            var rgParameter = rg != null ?
                new ObjectParameter("rg", rg) :
                new ObjectParameter("rg", typeof(string));
    
            var nomeParameter = nome != null ?
                new ObjectParameter("nome", nome) :
                new ObjectParameter("nome", typeof(string));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("sexo", sexo) :
                new ObjectParameter("sexo", typeof(string));
    
            var est_civilParameter = est_civil != null ?
                new ObjectParameter("est_civil", est_civil) :
                new ObjectParameter("est_civil", typeof(string));
    
            var ddiParameter = ddi != null ?
                new ObjectParameter("ddi", ddi) :
                new ObjectParameter("ddi", typeof(string));
    
            var dddParameter = ddd != null ?
                new ObjectParameter("ddd", ddd) :
                new ObjectParameter("ddd", typeof(string));
    
            var telParameter = tel != null ?
                new ObjectParameter("tel", tel) :
                new ObjectParameter("tel", typeof(string));
    
            var tel2Parameter = tel2 != null ?
                new ObjectParameter("tel2", tel2) :
                new ObjectParameter("tel2", typeof(string));
    
            var celParameter = cel != null ?
                new ObjectParameter("cel", cel) :
                new ObjectParameter("cel", typeof(string));
    
            var telComercialParameter = telComercial != null ?
                new ObjectParameter("telComercial", telComercial) :
                new ObjectParameter("telComercial", typeof(string));
    
            var telExtraParameter = telExtra != null ?
                new ObjectParameter("telExtra", telExtra) :
                new ObjectParameter("telExtra", typeof(string));
    
            var ruaParameter = rua != null ?
                new ObjectParameter("rua", rua) :
                new ObjectParameter("rua", typeof(string));
    
            var numParameter = num.HasValue ?
                new ObjectParameter("num", num) :
                new ObjectParameter("num", typeof(int));
    
            var complParameter = compl != null ?
                new ObjectParameter("compl", compl) :
                new ObjectParameter("compl", typeof(string));
    
            var bairroParameter = bairro != null ?
                new ObjectParameter("bairro", bairro) :
                new ObjectParameter("bairro", typeof(string));
    
            var cidadeParameter = cidade != null ?
                new ObjectParameter("cidade", cidade) :
                new ObjectParameter("cidade", typeof(string));
    
            var ufParameter = uf != null ?
                new ObjectParameter("uf", uf) :
                new ObjectParameter("uf", typeof(string));
    
            var paisParameter = pais != null ?
                new ObjectParameter("pais", pais) :
                new ObjectParameter("pais", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("usp_ProprietarioInserir", cpfParameter, rgParameter, nomeParameter, sexoParameter, est_civilParameter, ddiParameter, dddParameter, telParameter, tel2Parameter, celParameter, telComercialParameter, telExtraParameter, ruaParameter, numParameter, complParameter, bairroParameter, cidadeParameter, ufParameter, paisParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_TransacaoApagar(Nullable<int> cod)
        {
            var codParameter = cod.HasValue ?
                new ObjectParameter("cod", cod) :
                new ObjectParameter("cod", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_TransacaoApagar", codParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> usp_TransacaoInserir(string agencia, string num_conta, string digito, string tipo_conta, string nome_banco, Nullable<decimal> valor)
        {
            var agenciaParameter = agencia != null ?
                new ObjectParameter("agencia", agencia) :
                new ObjectParameter("agencia", typeof(string));
    
            var num_contaParameter = num_conta != null ?
                new ObjectParameter("num_conta", num_conta) :
                new ObjectParameter("num_conta", typeof(string));
    
            var digitoParameter = digito != null ?
                new ObjectParameter("digito", digito) :
                new ObjectParameter("digito", typeof(string));
    
            var tipo_contaParameter = tipo_conta != null ?
                new ObjectParameter("tipo_conta", tipo_conta) :
                new ObjectParameter("tipo_conta", typeof(string));
    
            var nome_bancoParameter = nome_banco != null ?
                new ObjectParameter("nome_banco", nome_banco) :
                new ObjectParameter("nome_banco", typeof(string));
    
            var valorParameter = valor.HasValue ?
                new ObjectParameter("valor", valor) :
                new ObjectParameter("valor", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("usp_TransacaoInserir", agenciaParameter, num_contaParameter, digitoParameter, tipo_contaParameter, nome_bancoParameter, valorParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_VendaApagar(Nullable<int> cod)
        {
            var codParameter = cod.HasValue ?
                new ObjectParameter("cod", cod) :
                new ObjectParameter("cod", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_VendaApagar", codParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> usp_VendaInserir(Nullable<int> valor, Nullable<int> entrada, Nullable<System.DateTime> data, string documentos, Nullable<int> vendedor, Nullable<decimal> porcenta_imobiliaria, string creci, Nullable<int> imovel_codigo, Nullable<int> despachante_codigo, Nullable<int> endereco_codigo, Nullable<int> comprador_codigo, Nullable<int> transacao_codigo)
        {
            var valorParameter = valor.HasValue ?
                new ObjectParameter("valor", valor) :
                new ObjectParameter("valor", typeof(int));
    
            var entradaParameter = entrada.HasValue ?
                new ObjectParameter("entrada", entrada) :
                new ObjectParameter("entrada", typeof(int));
    
            var dataParameter = data.HasValue ?
                new ObjectParameter("data", data) :
                new ObjectParameter("data", typeof(System.DateTime));
    
            var documentosParameter = documentos != null ?
                new ObjectParameter("documentos", documentos) :
                new ObjectParameter("documentos", typeof(string));
    
            var vendedorParameter = vendedor.HasValue ?
                new ObjectParameter("vendedor", vendedor) :
                new ObjectParameter("vendedor", typeof(int));
    
            var porcenta_imobiliariaParameter = porcenta_imobiliaria.HasValue ?
                new ObjectParameter("porcenta_imobiliaria", porcenta_imobiliaria) :
                new ObjectParameter("porcenta_imobiliaria", typeof(decimal));
    
            var creciParameter = creci != null ?
                new ObjectParameter("creci", creci) :
                new ObjectParameter("creci", typeof(string));
    
            var imovel_codigoParameter = imovel_codigo.HasValue ?
                new ObjectParameter("imovel_codigo", imovel_codigo) :
                new ObjectParameter("imovel_codigo", typeof(int));
    
            var despachante_codigoParameter = despachante_codigo.HasValue ?
                new ObjectParameter("despachante_codigo", despachante_codigo) :
                new ObjectParameter("despachante_codigo", typeof(int));
    
            var endereco_codigoParameter = endereco_codigo.HasValue ?
                new ObjectParameter("endereco_codigo", endereco_codigo) :
                new ObjectParameter("endereco_codigo", typeof(int));
    
            var comprador_codigoParameter = comprador_codigo.HasValue ?
                new ObjectParameter("comprador_codigo", comprador_codigo) :
                new ObjectParameter("comprador_codigo", typeof(int));
    
            var transacao_codigoParameter = transacao_codigo.HasValue ?
                new ObjectParameter("transacao_codigo", transacao_codigo) :
                new ObjectParameter("transacao_codigo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("usp_VendaInserir", valorParameter, entradaParameter, dataParameter, documentosParameter, vendedorParameter, porcenta_imobiliariaParameter, creciParameter, imovel_codigoParameter, despachante_codigoParameter, endereco_codigoParameter, comprador_codigoParameter, transacao_codigoParameter);
        }
    }
}
